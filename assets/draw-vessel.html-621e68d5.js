import{_ as s,M as e,p as o,q as p,N as c,a1 as d,R as n,t}from"./framework-a4e75609.js";const i={},r=d(`<h1 id="绘制船舶图标" tabindex="-1"><a class="header-anchor" href="#绘制船舶图标" aria-hidden="true">#</a> 绘制船舶图标</h1><p>传入标准 GeoJSON 格式数据生成船舶图标实例对象</p><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 推荐使用 turf.js 对数据进行格式化 遍历等操作</span>
<span class="token keyword">const</span> points <span class="token operator">=</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">&quot;FeatureCollection&quot;</span><span class="token punctuation">,</span>
  features<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token string">&quot;Feature&quot;</span><span class="token punctuation">,</span>
      properties<span class="token operator">:</span> <span class="token punctuation">{</span>
        iconStyle<span class="token operator">:</span> <span class="token punctuation">{</span>
          type<span class="token operator">:</span> <span class="token string">&quot;base&quot;</span><span class="token punctuation">,</span>
          deg<span class="token operator">:</span> <span class="token number">45</span><span class="token punctuation">,</span>
          fill<span class="token operator">:</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span>
          fillOpacity<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>
          opacity<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        test<span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      geometry<span class="token operator">:</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token string">&quot;Point&quot;</span><span class="token punctuation">,</span>
        coordinates<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">84.23420673067342</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">72.55849561953549</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">onEachFeature</span><span class="token punctuation">(</span>feature<span class="token punctuation">,</span> layer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    layer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>feature<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>layer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> layer <span class="token operator">=</span> hnsdk<span class="token punctuation">.</span><span class="token function">drawVessel</span><span class="token punctuation">(</span>points<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>

layer<span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><table><thead><tr><th>入参</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>geojson</td><td><a href="#featurecollection">featureCollection</a></td><td>GeoJSON FeatureCollection 标准格式数据</td></tr><tr><td>options</td><td><a href="#options">options</a></td><td>创建图层的可配置项</td></tr></tbody></table><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h2><table><thead><tr><th>选项</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>onEachFeature</td><td>Function</td><td>一个 <code>Function</code> ，在每个创建的 <code>Feature</code> 被创建和样式化后，将被调用一次。对于将事件和弹出窗口附加到要素上很有用。默认情况下，对新创建的图层不做任何处理:<br><code>function (feature, layer) {}</code></td></tr><tr><td>filter</td><td>Function</td><td>一个 <code>Function</code> ，用于决定是否包括一个要素。默认是包括所有要素:<br><code>function (geoJsonFeature) { return true; }</code></td></tr></tbody></table><h2 id="featurecollection" tabindex="-1"><a class="header-anchor" href="#featurecollection" aria-hidden="true">#</a> featureCollection</h2><table><thead><tr><th>选项</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td>String</td><td>类型 必须为 FeatureCollection</td></tr><tr><td>features</td><td><a href="#feature">feature</a>[]</td><td>特征组 每一项是每个船舶图标经纬度、及携带数据对象</td></tr></tbody></table><h2 id="feature" tabindex="-1"><a class="header-anchor" href="#feature" aria-hidden="true">#</a> feature</h2><table><thead><tr><th>选项</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td>String</td><td>类型 必须为 Feature</td></tr><tr><td>properties</td><td><a href="#properties">properties</a></td><td>特征携带数据，iconStyle 必填</td></tr><tr><td>geometry</td><td><a href="#geometry">geometry</a></td><td>经纬度数据</td></tr></tbody></table><h2 id="geometry" tabindex="-1"><a class="header-anchor" href="#geometry" aria-hidden="true">#</a> geometry</h2><table><thead><tr><th>选项</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td>String</td><td>类型 必须为 Point</td></tr><tr><td>coordinates</td><td>[Number , Number]</td><td>经纬度数组，前经后纬</td></tr></tbody></table><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> properties</h2><table><thead><tr><th>选项</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>iconStyle</td><td><a href="#iconstyle">iconStyle</a></td><td>船舶图标样式</td></tr><tr><td>任何</td><td>任何</td><td>船舶图标携带数据</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="iconstyle" tabindex="-1"><a class="header-anchor" href="#iconstyle" aria-hidden="true">#</a> iconStyle</h2><table><thead><tr><th>选项</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>deg</td><td>number</td><td>船头朝向 0 - 360</td></tr><tr><td>fill</td><td>string</td><td>填充色</td></tr><tr><td>fillOpacity</td><td>number</td><td>填充色透明度 0-1</td></tr><tr><td>type</td><td>string</td><td>基础：base<br>航行中：run<br>转向：turn<br>停泊：mooring<br>浮桶：floating</td></tr><tr><td>opacity</td><td>number</td><td>图标透明度 0-1</td></tr></tbody></table><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2>`,19),l=n("h2",{id:"返回",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#返回","aria-hidden":"true"},"#"),t(" 返回")],-1),u=n("p",null,[n("code",null,"GeoJSON"),t(" 实例对象")],-1);function h(k,b){const a=e("LayerMethodsTable");return o(),p("div",null,[r,c(a),l,u])}const m=s(i,[["render",h],["__file","draw-vessel.html.vue"]]);export{m as default};
